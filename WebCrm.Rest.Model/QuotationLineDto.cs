/* 
 * webCRM REST API
 *
 * Version: 1.0.0.0.<br>Note that you can access live data through this web site, so be careful when updating or deleting things.
 *
 * OpenAPI spec version: v1
 * Contact: api@webcrm.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;

namespace WebCrm.Rest.Model
{
    /// <summary>
    /// QuotationLineDto
    /// </summary>
    [DataContract]
    public partial class QuotationLineDto : BaseObject, IEquatable<QuotationLineDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuotationLineDto" /> class.
        /// </summary>
        [JsonConstructor]
        protected QuotationLineDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="QuotationLineDto" /> class.
        /// </summary>
        /// <param name="QuotationLineComment">QuotationLineComment.</param>
        /// <param name="QuotationLineCostPrice">QuotationLineCostPrice.</param>
        /// <param name="QuotationLineCreatedAt">QuotationLineCreatedAt.</param>
        /// <param name="QuotationLineCreatedBy">QuotationLineCreatedBy.</param>
        /// <param name="QuotationLineData1">QuotationLineData1.</param>
        /// <param name="QuotationLineData2">QuotationLineData2.</param>
        /// <param name="QuotationLineData3">QuotationLineData3.</param>
        /// <param name="QuotationLineData4">QuotationLineData4.</param>
        /// <param name="QuotationLineData5">QuotationLineData5.</param>
        /// <param name="QuotationLineData6">QuotationLineData6.</param>
        /// <param name="QuotationLineData7">QuotationLineData7.</param>
        /// <param name="QuotationLineData8">QuotationLineData8.</param>
        /// <param name="QuotationLineData9">QuotationLineData9.</param>
        /// <param name="QuotationLineDiscount">QuotationLineDiscount.</param>
        /// <param name="QuotationLineId">QuotationLineId (required).</param>
        /// <param name="QuotationLineListPrice">QuotationLineListPrice.</param>
        /// <param name="QuotationLineMemo">QuotationLineMemo.</param>
        /// <param name="QuotationLineOpportunityId">QuotationLineOpportunityId.</param>
        /// <param name="QuotationLineOrganisationId">QuotationLineOrganisationId.</param>
        /// <param name="QuotationLinePersonId">QuotationLinePersonId.</param>
        /// <param name="QuotationLinePrice">QuotationLinePrice.</param>
        /// <param name="QuotationLineQuantity">QuotationLineQuantity.</param>
        /// <param name="QuotationLineSortOrder">QuotationLineSortOrder.</param>
        /// <param name="QuotationLineStockStatus">QuotationLineStockStatus.</param>
        /// <param name="QuotationLineUpdatedAt">QuotationLineUpdatedAt.</param>
        /// <param name="QuotationLineUpdatedBy">QuotationLineUpdatedBy.</param>
        /// <param name="QuotationLineVatPercentage">QuotationLineVatPercentage.</param>
        public QuotationLineDto(string QuotationLineComment = default(string), double? QuotationLineCostPrice = default(double?), DateTime? QuotationLineCreatedAt = default(DateTime?), string QuotationLineCreatedBy = default(string), string QuotationLineData1 = default(string), string QuotationLineData2 = default(string), string QuotationLineData3 = default(string), string QuotationLineData4 = default(string), string QuotationLineData5 = default(string), string QuotationLineData6 = default(string), string QuotationLineData7 = default(string), string QuotationLineData8 = default(string), string QuotationLineData9 = default(string), double? QuotationLineDiscount = default(double?), int? QuotationLineId = default(int?), double? QuotationLineListPrice = default(double?), string QuotationLineMemo = default(string), int? QuotationLineOpportunityId = default(int?), int? QuotationLineOrganisationId = default(int?), int? QuotationLinePersonId = default(int?), double? QuotationLinePrice = default(double?), double? QuotationLineQuantity = default(double?), int? QuotationLineSortOrder = default(int?), string QuotationLineStockStatus = default(string), DateTime? QuotationLineUpdatedAt = default(DateTime?), string QuotationLineUpdatedBy = default(string), double? QuotationLineVatPercentage = default(double?))
        {
            // to ensure "QuotationLineId" is required (not null)
            if (QuotationLineId == null)
            {
                throw new InvalidDataException("QuotationLineId is a required property for QuotationLineDto and cannot be null");
            }
            else
            {
                this.QuotationLineId = QuotationLineId;
            }
            this.QuotationLineComment = QuotationLineComment;
            this.QuotationLineCostPrice = QuotationLineCostPrice;
            this.QuotationLineCreatedAt = QuotationLineCreatedAt;
            this.QuotationLineCreatedBy = QuotationLineCreatedBy;
            this.QuotationLineData1 = QuotationLineData1;
            this.QuotationLineData2 = QuotationLineData2;
            this.QuotationLineData3 = QuotationLineData3;
            this.QuotationLineData4 = QuotationLineData4;
            this.QuotationLineData5 = QuotationLineData5;
            this.QuotationLineData6 = QuotationLineData6;
            this.QuotationLineData7 = QuotationLineData7;
            this.QuotationLineData8 = QuotationLineData8;
            this.QuotationLineData9 = QuotationLineData9;
            this.QuotationLineDiscount = QuotationLineDiscount;
            this.QuotationLineListPrice = QuotationLineListPrice;
            this.QuotationLineMemo = QuotationLineMemo;
            this.QuotationLineOpportunityId = QuotationLineOpportunityId;
            this.QuotationLineOrganisationId = QuotationLineOrganisationId;
            this.QuotationLinePersonId = QuotationLinePersonId;
            this.QuotationLinePrice = QuotationLinePrice;
            this.QuotationLineQuantity = QuotationLineQuantity;
            this.QuotationLineSortOrder = QuotationLineSortOrder;
            this.QuotationLineStockStatus = QuotationLineStockStatus;
            this.QuotationLineUpdatedAt = QuotationLineUpdatedAt;
            this.QuotationLineUpdatedBy = QuotationLineUpdatedBy;
            this.QuotationLineVatPercentage = QuotationLineVatPercentage;
        }
        
        /// <summary>
        /// Gets or Sets QuotationLineComment
        /// </summary>
        [DataMember(Name="QuotationLineComment", EmitDefaultValue=false)]
        public string QuotationLineComment { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineCostPrice
        /// </summary>
        [DataMember(Name="QuotationLineCostPrice", EmitDefaultValue=false)]
        public double? QuotationLineCostPrice { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineCreatedAt
        /// </summary>
        [DataMember(Name="QuotationLineCreatedAt", EmitDefaultValue=false)]
        public DateTime? QuotationLineCreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineCreatedBy
        /// </summary>
        [DataMember(Name="QuotationLineCreatedBy", EmitDefaultValue=false)]
        public string QuotationLineCreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData1
        /// </summary>
        [DataMember(Name="QuotationLineData1", EmitDefaultValue=false)]
        public string QuotationLineData1 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData2
        /// </summary>
        [DataMember(Name="QuotationLineData2", EmitDefaultValue=false)]
        public string QuotationLineData2 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData3
        /// </summary>
        [DataMember(Name="QuotationLineData3", EmitDefaultValue=false)]
        public string QuotationLineData3 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData4
        /// </summary>
        [DataMember(Name="QuotationLineData4", EmitDefaultValue=false)]
        public string QuotationLineData4 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData5
        /// </summary>
        [DataMember(Name="QuotationLineData5", EmitDefaultValue=false)]
        public string QuotationLineData5 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData6
        /// </summary>
        [DataMember(Name="QuotationLineData6", EmitDefaultValue=false)]
        public string QuotationLineData6 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData7
        /// </summary>
        [DataMember(Name="QuotationLineData7", EmitDefaultValue=false)]
        public string QuotationLineData7 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData8
        /// </summary>
        [DataMember(Name="QuotationLineData8", EmitDefaultValue=false)]
        public string QuotationLineData8 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineData9
        /// </summary>
        [DataMember(Name="QuotationLineData9", EmitDefaultValue=false)]
        public string QuotationLineData9 { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineDiscount
        /// </summary>
        [DataMember(Name="QuotationLineDiscount", EmitDefaultValue=false)]
        public double? QuotationLineDiscount { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineId
        /// </summary>
        [DataMember(Name="QuotationLineId", EmitDefaultValue=false)]
        public int? QuotationLineId { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineListPrice
        /// </summary>
        [DataMember(Name="QuotationLineListPrice", EmitDefaultValue=false)]
        public double? QuotationLineListPrice { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineMemo
        /// </summary>
        [DataMember(Name="QuotationLineMemo", EmitDefaultValue=false)]
        public string QuotationLineMemo { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineOpportunityId
        /// </summary>
        [DataMember(Name="QuotationLineOpportunityId", EmitDefaultValue=false)]
        public int? QuotationLineOpportunityId { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineOrganisationId
        /// </summary>
        [DataMember(Name="QuotationLineOrganisationId", EmitDefaultValue=false)]
        public int? QuotationLineOrganisationId { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLinePersonId
        /// </summary>
        [DataMember(Name="QuotationLinePersonId", EmitDefaultValue=false)]
        public int? QuotationLinePersonId { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLinePrice
        /// </summary>
        [DataMember(Name="QuotationLinePrice", EmitDefaultValue=false)]
        public double? QuotationLinePrice { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineQuantity
        /// </summary>
        [DataMember(Name="QuotationLineQuantity", EmitDefaultValue=false)]
        public double? QuotationLineQuantity { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineSortOrder
        /// </summary>
        [DataMember(Name="QuotationLineSortOrder", EmitDefaultValue=false)]
        public int? QuotationLineSortOrder { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineStockStatus
        /// </summary>
        [DataMember(Name="QuotationLineStockStatus", EmitDefaultValue=false)]
        public string QuotationLineStockStatus { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineUpdatedAt
        /// </summary>
        [DataMember(Name="QuotationLineUpdatedAt", EmitDefaultValue=false)]
        public DateTime? QuotationLineUpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineUpdatedBy
        /// </summary>
        [DataMember(Name="QuotationLineUpdatedBy", EmitDefaultValue=false)]
        public string QuotationLineUpdatedBy { get; set; }

        /// <summary>
        /// Gets or Sets QuotationLineVatPercentage
        /// </summary>
        [DataMember(Name="QuotationLineVatPercentage", EmitDefaultValue=false)]
        public double? QuotationLineVatPercentage { get; set; }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QuotationLineDto);
        }

        /// <summary>
        /// Returns true if QuotationLineDto instances are equal
        /// </summary>
        /// <param name="input">Instance of QuotationLineDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QuotationLineDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.QuotationLineComment == input.QuotationLineComment ||
                    (this.QuotationLineComment != null &&
                    this.QuotationLineComment.Equals(input.QuotationLineComment))
                ) && 
                (
                    this.QuotationLineCostPrice == input.QuotationLineCostPrice ||
                    (this.QuotationLineCostPrice != null &&
                    this.QuotationLineCostPrice.Equals(input.QuotationLineCostPrice))
                ) && 
                (
                    this.QuotationLineCreatedAt == input.QuotationLineCreatedAt ||
                    (this.QuotationLineCreatedAt != null &&
                    this.QuotationLineCreatedAt.Equals(input.QuotationLineCreatedAt))
                ) && 
                (
                    this.QuotationLineCreatedBy == input.QuotationLineCreatedBy ||
                    (this.QuotationLineCreatedBy != null &&
                    this.QuotationLineCreatedBy.Equals(input.QuotationLineCreatedBy))
                ) && 
                (
                    this.QuotationLineData1 == input.QuotationLineData1 ||
                    (this.QuotationLineData1 != null &&
                    this.QuotationLineData1.Equals(input.QuotationLineData1))
                ) && 
                (
                    this.QuotationLineData2 == input.QuotationLineData2 ||
                    (this.QuotationLineData2 != null &&
                    this.QuotationLineData2.Equals(input.QuotationLineData2))
                ) && 
                (
                    this.QuotationLineData3 == input.QuotationLineData3 ||
                    (this.QuotationLineData3 != null &&
                    this.QuotationLineData3.Equals(input.QuotationLineData3))
                ) && 
                (
                    this.QuotationLineData4 == input.QuotationLineData4 ||
                    (this.QuotationLineData4 != null &&
                    this.QuotationLineData4.Equals(input.QuotationLineData4))
                ) && 
                (
                    this.QuotationLineData5 == input.QuotationLineData5 ||
                    (this.QuotationLineData5 != null &&
                    this.QuotationLineData5.Equals(input.QuotationLineData5))
                ) && 
                (
                    this.QuotationLineData6 == input.QuotationLineData6 ||
                    (this.QuotationLineData6 != null &&
                    this.QuotationLineData6.Equals(input.QuotationLineData6))
                ) && 
                (
                    this.QuotationLineData7 == input.QuotationLineData7 ||
                    (this.QuotationLineData7 != null &&
                    this.QuotationLineData7.Equals(input.QuotationLineData7))
                ) && 
                (
                    this.QuotationLineData8 == input.QuotationLineData8 ||
                    (this.QuotationLineData8 != null &&
                    this.QuotationLineData8.Equals(input.QuotationLineData8))
                ) && 
                (
                    this.QuotationLineData9 == input.QuotationLineData9 ||
                    (this.QuotationLineData9 != null &&
                    this.QuotationLineData9.Equals(input.QuotationLineData9))
                ) && 
                (
                    this.QuotationLineDiscount == input.QuotationLineDiscount ||
                    (this.QuotationLineDiscount != null &&
                    this.QuotationLineDiscount.Equals(input.QuotationLineDiscount))
                ) && 
                (
                    this.QuotationLineId == input.QuotationLineId ||
                    (this.QuotationLineId != null &&
                    this.QuotationLineId.Equals(input.QuotationLineId))
                ) && 
                (
                    this.QuotationLineListPrice == input.QuotationLineListPrice ||
                    (this.QuotationLineListPrice != null &&
                    this.QuotationLineListPrice.Equals(input.QuotationLineListPrice))
                ) && 
                (
                    this.QuotationLineMemo == input.QuotationLineMemo ||
                    (this.QuotationLineMemo != null &&
                    this.QuotationLineMemo.Equals(input.QuotationLineMemo))
                ) && 
                (
                    this.QuotationLineOpportunityId == input.QuotationLineOpportunityId ||
                    (this.QuotationLineOpportunityId != null &&
                    this.QuotationLineOpportunityId.Equals(input.QuotationLineOpportunityId))
                ) && 
                (
                    this.QuotationLineOrganisationId == input.QuotationLineOrganisationId ||
                    (this.QuotationLineOrganisationId != null &&
                    this.QuotationLineOrganisationId.Equals(input.QuotationLineOrganisationId))
                ) && 
                (
                    this.QuotationLinePersonId == input.QuotationLinePersonId ||
                    (this.QuotationLinePersonId != null &&
                    this.QuotationLinePersonId.Equals(input.QuotationLinePersonId))
                ) && 
                (
                    this.QuotationLinePrice == input.QuotationLinePrice ||
                    (this.QuotationLinePrice != null &&
                    this.QuotationLinePrice.Equals(input.QuotationLinePrice))
                ) && 
                (
                    this.QuotationLineQuantity == input.QuotationLineQuantity ||
                    (this.QuotationLineQuantity != null &&
                    this.QuotationLineQuantity.Equals(input.QuotationLineQuantity))
                ) && 
                (
                    this.QuotationLineSortOrder == input.QuotationLineSortOrder ||
                    (this.QuotationLineSortOrder != null &&
                    this.QuotationLineSortOrder.Equals(input.QuotationLineSortOrder))
                ) && 
                (
                    this.QuotationLineStockStatus == input.QuotationLineStockStatus ||
                    (this.QuotationLineStockStatus != null &&
                    this.QuotationLineStockStatus.Equals(input.QuotationLineStockStatus))
                ) && 
                (
                    this.QuotationLineUpdatedAt == input.QuotationLineUpdatedAt ||
                    (this.QuotationLineUpdatedAt != null &&
                    this.QuotationLineUpdatedAt.Equals(input.QuotationLineUpdatedAt))
                ) && 
                (
                    this.QuotationLineUpdatedBy == input.QuotationLineUpdatedBy ||
                    (this.QuotationLineUpdatedBy != null &&
                    this.QuotationLineUpdatedBy.Equals(input.QuotationLineUpdatedBy))
                ) && 
                (
                    this.QuotationLineVatPercentage == input.QuotationLineVatPercentage ||
                    (this.QuotationLineVatPercentage != null &&
                    this.QuotationLineVatPercentage.Equals(input.QuotationLineVatPercentage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.QuotationLineComment != null)
                    hashCode = hashCode * 59 + this.QuotationLineComment.GetHashCode();
                if (this.QuotationLineCostPrice != null)
                    hashCode = hashCode * 59 + this.QuotationLineCostPrice.GetHashCode();
                if (this.QuotationLineCreatedAt != null)
                    hashCode = hashCode * 59 + this.QuotationLineCreatedAt.GetHashCode();
                if (this.QuotationLineCreatedBy != null)
                    hashCode = hashCode * 59 + this.QuotationLineCreatedBy.GetHashCode();
                if (this.QuotationLineData1 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData1.GetHashCode();
                if (this.QuotationLineData2 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData2.GetHashCode();
                if (this.QuotationLineData3 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData3.GetHashCode();
                if (this.QuotationLineData4 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData4.GetHashCode();
                if (this.QuotationLineData5 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData5.GetHashCode();
                if (this.QuotationLineData6 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData6.GetHashCode();
                if (this.QuotationLineData7 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData7.GetHashCode();
                if (this.QuotationLineData8 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData8.GetHashCode();
                if (this.QuotationLineData9 != null)
                    hashCode = hashCode * 59 + this.QuotationLineData9.GetHashCode();
                if (this.QuotationLineDiscount != null)
                    hashCode = hashCode * 59 + this.QuotationLineDiscount.GetHashCode();
                if (this.QuotationLineId != null)
                    hashCode = hashCode * 59 + this.QuotationLineId.GetHashCode();
                if (this.QuotationLineListPrice != null)
                    hashCode = hashCode * 59 + this.QuotationLineListPrice.GetHashCode();
                if (this.QuotationLineMemo != null)
                    hashCode = hashCode * 59 + this.QuotationLineMemo.GetHashCode();
                if (this.QuotationLineOpportunityId != null)
                    hashCode = hashCode * 59 + this.QuotationLineOpportunityId.GetHashCode();
                if (this.QuotationLineOrganisationId != null)
                    hashCode = hashCode * 59 + this.QuotationLineOrganisationId.GetHashCode();
                if (this.QuotationLinePersonId != null)
                    hashCode = hashCode * 59 + this.QuotationLinePersonId.GetHashCode();
                if (this.QuotationLinePrice != null)
                    hashCode = hashCode * 59 + this.QuotationLinePrice.GetHashCode();
                if (this.QuotationLineQuantity != null)
                    hashCode = hashCode * 59 + this.QuotationLineQuantity.GetHashCode();
                if (this.QuotationLineSortOrder != null)
                    hashCode = hashCode * 59 + this.QuotationLineSortOrder.GetHashCode();
                if (this.QuotationLineStockStatus != null)
                    hashCode = hashCode * 59 + this.QuotationLineStockStatus.GetHashCode();
                if (this.QuotationLineUpdatedAt != null)
                    hashCode = hashCode * 59 + this.QuotationLineUpdatedAt.GetHashCode();
                if (this.QuotationLineUpdatedBy != null)
                    hashCode = hashCode * 59 + this.QuotationLineUpdatedBy.GetHashCode();
                if (this.QuotationLineVatPercentage != null)
                    hashCode = hashCode * 59 + this.QuotationLineVatPercentage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
